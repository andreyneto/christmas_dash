pico-8 cartridge // http://www.pico-8.com
version 41
__lua__

function _init()
	srand(time())
	START_SCREEN = 0
	GAME_SCREEN = 1
	GAME_OVER_SCREEN = 2

	game_state = START_SCREEN

	frame_distance_helper = 0
	distance = 0
	speed = 1
	gravity = 6
	jump_time = 7
	jump_strenght_pulse = -11
	jump_strenght_long = -1
	ground = {y = 96}

	grounds = {}
	for i=0,19 do
		add(grounds,{
			x=i*8,
			s=64+i%4,
			e={
				b=rnd()>0.75,
				s=rnd{68,69},
				h=rnd{16,24}
			}
		})
	end
	
	high_roof_y = 44
	low_roof_y = 76
	high_roofs = {}
	low_roofs = {}

	collected_gifts = 0
	gifts = {}

	player = {}
	player.x = 24
	player.y = ground.y
	player.w = 8
	player.vertical_speed = 0
	player.jump_strenght = 0
	player.jump_time = jump_time
	player.is_jumping = false
	player.is_running = false
	player.on_ground = true
	player.on_roof = false
	player.sprite = 1
	player.anim = 0

	player.update = function()
		player_animate(player)
		frame_distance_helper += speed
		if(frame_distance_helper > 60) then
			distance += speed
			frame_distance_helper = 0
		end
		parse_jump(player)
	end
	player.draw = function()
		spr(player.sprite, player.x, player.y, 1,1)
	end

	clouds = {}
	for i=0,16 do
		add(clouds,{
			x=rnd(128),
			y=rnd(128),
			spd=1+rnd(2),
			w=32+rnd(32)
		})
	end

	particles = {}
	for i=0,24 do
		add(particles,{
			x=rnd(128),
			y=rnd(128),
			s=0+flr(rnd(5)/4),
			spd=0.25+rnd(2),
			off=rnd(1),
			c=6+flr(0.5+rnd(1))
		})
	end
end

function _update()
	if game_state == START_SCREEN then
		update_start_screen()
	elseif game_state == GAME_SCREEN then
		update_game_screen()
	elseif game_state == GAME_OVER_SCREEN then
		update_game_over_screen()
	end
end

function _draw()
	cls()  -- Clear the screen
	if game_state == START_SCREEN then
		draw_start_screen()
	elseif game_state == GAME_SCREEN then
		draw_game_screen()
	elseif game_state == GAME_OVER_SCREEN then
		draw_game_over_screen()
	end
end

function draw_start_screen()
	draw_game_screen()
	print("Press Z to start", 48, 60, 7)
end

function update_start_screen()
	player.update()
	if btnp(4) then  -- 'Z' key is pressed
	reset()
		game_state = GAME_SCREEN
	end
end

function draw_roofs()
	for _, roof in pairs(high_roofs) do
		rectfill(roof.x,high_roof_y,roof.x+ roof.w,high_roof_y+1,4)
	end
	for _, roof in pairs(low_roofs) do
		for i = 0, roof.w-1, 8 do
			local s = 96
			if(i==0) then s = 100 end
			if(i==roof.w-8) then s = 101 end
			if(s==100 or s==101) then
				for j=8, 24, 8 do
					spr(s+16, roof.x+i, low_roof_y+j)
				end
			elseif (s>99) then s=96 end
			spr(s, roof.x+i, low_roof_y)
			s +=1
		end
	end
end
function draw_gifts()
	for _, gift in pairs(gifts) do
		local offset = 0
		if(time()-player.anim>0.1) then offset = 1 end
		spr(gift.s, gift.x, gift.y+offset, 1,1)
	end
end

function draw_ground()
	rectfill(0,ground.y+16, 127,127,6)
	for _, g in pairs(grounds) do
		spr(g.s, g.x, ground.y+8)
		if(g.e.b) then
			spr(g.e.s, g.x, ground.y + g.e.h)
		end
	end
end

function update_ground()
	for _, g in pairs(grounds) do
		if(g.x<-8) then
			local e = g
			e.x = grounds[#grounds].x+8
			del(grounds, g)
			add(grounds, e)
		end
		g.x -= speed
	end
end

function update_gifts()
	for _, gift in pairs(gifts) do
		if(colide(player, gift)) then
			collected_gifts += 1
			del(gifts, gift)
			return
		end
		if(gift.x<-8) then
			del(gifts, gift)
			return
		end
		gift.x -= speed
	end
end


function update_roofs(roofs, y)
	if(is_table_empty(roofs)) then add(roofs, generate_roof(y, 128)) end
	for _, roof in pairs(roofs) do
		if(roof.x+roof.w<0) then
			del(roofs, roof)
		end
		roof.x -= speed
	end
end

function generate_gift(x, y)
	add(gifts,{x = x, y = y, w = 8, s = random_between(16,19)})
end

function generate_roof(y, x)
	local w = random_between(3,16)*8
	local gift_chance = random_between(1,100)
	if(gift_chance>95 and y == 44) then
		generate_gift(x+w+16, y-40)
	elseif(gift_chance>50) then
		local gx = random_between(x, w+x);
		generate_gift(gx, y-16)
	end
	return {x = x, y = y, w = w}
end

function player_animate(actor)
	if(game_state == START_SCREEN) then
		if(time()-player.anim>.8) then
			player.anim = time()
			player.sprite+=1
			if (player.sprite>2) then
				player.sprite=1
			end
		end
		return
	end
	if(game_state == GAME_SCREEN) then
		if(time()-player.anim>.1) then
			player.anim = time()
			player.sprite+=1
			if (player.sprite>6) then
				player.sprite=3
			end
		end
		if (not actor.on_ground)
		then
			if (actor.vertical_speed > 0)
			then
				actor.sprite = 8
			else
				actor.sprite = 7

			end
		end
	end
end

function parse_jump(actor)
	if (btn(3)) then
		actor.y += gravity
	end
	if (btn(2) and actor.on_ground and not player.is_jumping)
	then
		sfx(0)
		actor.jump_strenght = jump_strenght_pulse
		actor.on_ground = false
		actor.on_roof = false
	elseif (actor.is_jumping and actor.jump_time > 0 and not actor.on_ground)
	then
		actor.jump_strenght += jump_strenght_long
		actor.jump_time -= 1
	end

	if (actor.is_jumping and not btn(2))
	then
		actor.jump_time = 0
	end

	actor.jump_strenght *= 0.9
	actor.vertical_speed = gravity + actor.jump_strenght
	actor.y += actor.vertical_speed

	if (actor.y >= ground.y)
	then
		if (not actor.on_ground)
		then
			sfx(1)
		end
		actor.y = ground.y
		actor.on_ground = true
		actor.jump_time = jump_time
		actor.on_roof = false
	end
	for _, roof in pairs(low_roofs) do
        check_roof_collision(actor, roof)
    end
	for _, roof in pairs(high_roofs) do
        check_roof_collision(actor, roof)
    end

	if (actor.on_roof and actor.vertical_speed < 0) then
		actor.vertical_speed = 0
		actor.y = actor.y + 1
	end

	if (actor.jump_strenght > -2)
	then
		actor.jump_strenght = 0
	end

	actor.is_jumping = btn(2)
end

function check_roof_collision(actor, roof)
    if actor.x < roof.x + roof.w and actor.x + 8 > roof.x and actor.y + 8 > roof.y and actor.y < roof.y then
        actor.y = roof.y - 8
        actor.vertical_speed = 0
        actor.on_ground = true
        actor.jump_time = jump_time
        sfx(1)  -- Play a sound when landing on the roof
    end
end

function update_game_screen()
	player.update()
	if(distance>10) then update_roofs(high_roofs, 44) end
	update_roofs(low_roofs, 76)
	update_gifts()
	update_ground()
end

function draw_clouds()
	foreach(clouds, function(c)
		c.x -= c.spd/10
		rectfill(c.x,c.y,c.x+c.w,c.y+4+(1-c.w/64)*12,13)
		if c.x+c.w < 0 then
			c.x = 128+c.w
			c.y=rnd(128-8)
		end
	end)
end

function draw_snow()
	foreach(particles, function(p)
		local ps = speed
		if(game_state == GAME_SCREEN) then ps *= p.spd end
		p.x -= ps
		p.y -= sin(p.off)
		p.off-= min(0.05,ps/32)
		rectfill(p.x,p.y,p.x+p.s,p.y+p.s,p.c)
		if p.x<0-4 then 
			p.x=128+4
			p.y=rnd(128)
		end
	end)
end

function draw_game_screen()
	cls(1)
	draw_clouds()
	draw_roofs()
	draw_gifts()
	draw_ground()
	player.draw()
	draw_snow()
	print("distance " .. distance, 1, 0, 11)	
	print("gifts    " .. collected_gifts, 1, 8, 11)
end

function update_game_over_screen()
	if btnp(4) then
		reset()
	end
end

function draw_game_over_screen()
	print("Game Over", 56, 60, 8)
	print("Press Z to restart", 40, 70, 7)
end

function colide(a, b)
	return a.x < b.x + b.w and
		   a.x + a.w > b.x and
		   a.y < b.y + b.w and
		   a.y + a.w > b.y
  end
  

function random_between(min, max)
	return flr(rnd(max - min + 1)) + min
end
function is_table_empty(t)
	return next(t) == nil
  end
__gfx__
00000000008888800088888000088888000888880008888800088888000088887088888800000000000000000000000000000000000000000000000000000000
00000000087777700877777008887777708877770088777778887777000877770808777700000000000000000000000000000000000000000000000000000000
0070070008671f1008671f107007671f0807671f7807671f0007671f0087671f0007671600000000000000000000000000000000000000000000000000000000
000770007066666070666e600006666e0006666e0006666e0006666e0807666e00f7666600000000000000000000000000000000000000000000000000000000
0007700000076660008766600f8776660f8776660f8776660f877666708776660008776000000000000000000000000000000000000000000000000000000000
00700700008886000f0886f0000896000008960000089060000890600f0896000000890000000000000000000000000000000000000000000000000000000000
000000000f0890f00008900004808000008800000280800000880000008800000000880000000000000000000000000000000000000000000000000000000000
00000000004002000040020000002000004200000000400000240000024000000000420000000000000000000000000000000000000000000000000000000000
04400440055005500550055002200220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
49f449f453b553b55675567528e228e2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
494ff494535bb53556577565282ee282000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0eee49e0ffff53ff022562200b82bbb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e8884f8ef9995b9f2885788233e23333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
e8884f88f9995b998885788833e23333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88884988999953992885688233823333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
02222220444444440222222005555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aaaa00000aa000000aa000000aa0000077aa00000aa000000aa000000aa0000000000000000000000000000000000000000000000000000000000000000000
099999a000999a0000999a0000a99900079999a00099770000999a0000a999000000000000000000000000000000000000000000000000000000000000000000
49944a9a0499a9a00049aa000a99494079944a9a049779a00049aa000a9949400000000000000000000000000000000000000000000000000000000000000000
49499a9a0494a9a00044aa000a9a494049499a9a0477a9a00044a7000a9a49400000000000000000000000000000000000000000000000000000000000000000
49499a9a0494a9a00044aa000a9a494049499a9a0774a9a0004477000a9a49700000000000000000000000000000000000000000000000000000000000000000
494aa99a049499a000449a000a9a9940494aa99a079499a000477a000a9a99700000000000000000000000000000000000000000000000000000000000000000
04999990004999000049990000999400049999900049990000779900009997000000000000000000000000000000000000000000000000000000000000000000
00444400000440000004400000044000004444000004400000044000000770000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777777777777777777777777666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
d777d7777777d777d7ddd77d77777dd7677666666dd6666600000000000000000000000000000000000000000000000000000000000000000000000000000000
dd7ddd7dd77dd777dd66d7d6dd777d6d677667666dd66d6600000000000000000000000000000000000000000000000000000000000000000000000000000000
67d666d6d77d6d7d66666d766d77d666666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
67d66666d7d666d666666d7666d7d666666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
6d6666666d666666666667d6666d66666676666666d6666600000000000000000000000000000000000000000000000000000000000000000000000000000000
666666666666666666666d66666666666666676666666d6600000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666666666666666666666666666666666666600000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777777777777777777777777077d77777777d77000000000000000000000000000000000000000000000000000000000000000000000000000000000
d777d7777777d777d7ddd77d77777dd75688d7777777d68800000000000000000000000000000000000000000000000000000000000000000000000000000000
dd7ddd7dd77ddd7ddd86d7d6dd777d8d5886dd7ddd77d88700000000000000000000000000000000000000000000000000000000000000000000000000000000
67d688d6d77d88d688668d768d77d866286688d68d7d886700000000000000000000000000000000000000000000000000000000000000000000000000000000
87d88668d7d8866886688d7886d7d6682668866886d8866e00000000000000000000000000000000000000000000000000000000000000000000000000000000
5d22552255225522552257d2552d5522052255225522552000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000d0000000000000056875667000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000005867566e000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000026675687000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000566e5867000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000056872667000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000005867566e000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000026675687000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000566e5867000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000056872667000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000002867566e000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800080000000000000000
0800000000000000000000000808080808080808000000000000000008080808080808080000000000000000080808080808080800000000000000000808080808080808000000000000000008080808080808080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
